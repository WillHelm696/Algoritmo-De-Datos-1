from LinkedList import *
from mystack import *
from myqueue import *
from mypriorityqueue import *

S=LinkedList()
print("Push")
print("(S,a)"),push(S,'a')
print("(S,b)"),push(S,'b')
print("(S,c)"),push(S,'c')
print("(S,d)"),push(S,'d')
print("(S,e)"),push(S,'e')
print_L(S)
print()
print("Pop(S): ",pop(S))
print("Pop(S): ",pop(S))
print_L(S)
Q=LinkedList()
print()
print("Queue")
print("(Q,Hola)"),enqueue(Q,'Hola')
print("(Q,Mundo)"),enqueue(Q,'Mundo')
print("(Q,!!!)"),enqueue(Q,'!!!')
print_L(Q)
print()
print("Dequeue(Q):",dequeue(Q))
print_L(Q)
print()
print("enqueue priority")
Q=PriorityQueue()
print("(Q,'Algoritmo',6):",enqueue_priority(Q,'Algoritmo',2))
print("(Q,'¡¡¡',2):",enqueue_priority(Q,'¡¡¡',10))
print("(Q,'!!!',8):",enqueue_priority(Q,'!!!',2))
print("(Q,'Soy',4):",enqueue_priority(Q,'Soy',6))
print("(Q,'Un',8):",enqueue_priority(Q,'Un',8))
print_L(Q)
print("dequeue priority (Q)",dequeue_priority(Q))
print("dequeue priority (Q)",dequeue_priority(Q))
print("dequeue priority (Q)",dequeue_priority(Q))
print("dequeue priority (Q)",dequeue_priority(Q))
print("dequeue priority (Q)",dequeue_priority(Q))
print_L(Q)